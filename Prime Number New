# Brand new solution

import numpy as np

liste = [215, 193, 124, 117, 237, 442, 218, 935, 347, 235, 320, 804, 522, 417, 345, 229, 601, 723, 835, 133, 124, 248, 202, 277, 433, 207, 263, 257, 359, 464, 504, 528, 516, 716, 871, 182, 461, 441, 426, 656, 863, 560, 380, 171, 923, 381, 348, 573, 533, 447, 632, 387, 176, 975, 449, 223, 711, 445, 645, 245, 543, 931, 532, 937, 541, 444, 330, 131, 333, 928, 377, 733, 17, 778, 839, 168, 197, 197, 131, 171, 522, 137, 217, 224, 291, 413, 528, 520, 227, 229, 928, 223, 626, 34, 683, 839, 53, 627, 310, 713, 999, 629, 817, 410, 121, 924, 622, 911, 233, 325, 139, 721, 218, 253, 223, 107, 233, 230, 124, 233]
toplam=0


def fill_lower_diag(a):
    n = int(np.sqrt(len(a)*2))+1
    mask = np.tri(n,dtype=bool, k=-1)
    out = np.zeros((n,n),dtype=int)
    out[mask] = a
    return out

ucgenliste = fill_lower_diag(toplamlistesi)

def asal_mi(sayi):
    if sayi > 1:
        for i in range(2, int(sayi/2)+1):
           if (sayi % i) == 0:
                return 1
                break
        else:
                return 0
    else:
        return 1

i=0
for i in range(i, len(liste)):
    if asal_mi(liste[i]) ==1:
        liste[i]=1
    else:
        liste[i]=0

yeniliste = fill_lower_diag(liste)
numrows = len(yeniliste)
numcols = len(yeniliste[0])

x=1
y=0
esasSonuc=0
hata=0

toplamke= [[0]*numrows for _ in range(numcols)]

while x < numrows:
    while y < numcols:
        if yeniliste[x][y]==1:
            if hata==1:
                toplamke[x][y]=ucgenliste[x][y]
                y=y+1
                x=x+1
                hata=0
                break
            else:
                toplamke[x][y]=ucgenliste[x][y]
                x=x+1
                break
        elif yeniliste[x][y+1]==1:
            if hata==1:
                toplamke[x][y]=ucgenliste[x][y+1]
                x=x-1
                hata=0
                break
            else:
                toplamke[x][y]=ucgenliste[x][y+1]
                x=x+1
                y=y+1
            break
        elif yeniliste[x][y+1]==0:
            if hata==1:
                x=x-3
                break
            x=x-2
            hata=1;
            break
            
x=numcols-1
y=numrows-1

while x > 0:
    while y > -1:
        if toplamke[x][y]>0:
            esasSonuc=esasSonuc+toplamke[x][y]
            x=x-1
            break
        else:
            y=y-1

print(esasSonuc)

